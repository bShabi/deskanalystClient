{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js\";\nimport React, { Component } from \"react\";\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\n\nclass FileReader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      matches: [],\n      teamName: \"\",\n      players: []\n    };\n    this.updateData = this.updateData.bind(this);\n    this.extractData = this.extractData.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeTeamName = this.onChangeTeamName.bind(this); // this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  updateData(result) {\n    const data = result.data;\n    this.setState({\n      data: data\n    });\n  }\n\n  extractData(selector) {\n    let temp = [];\n    let final = [];\n\n    switch (selector) {\n      case \"firstname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][0]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"lastname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][1]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"totaltime\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][2]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][3]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][4]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprints\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][5]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_avg_id\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][6]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      default:\n        console.log(selector);\n    }\n\n    return final;\n  }\n\n  onChangeTeamName(e) {\n    this.setState({\n      teamName: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let tempPlayersList = [];\n    let firstName = this.extractData(\"firstname\");\n    let lastName = this.extractData(\"lastname\");\n    let totalTime = this.extractData(\"totaltime\");\n    let distance = this.extractData(\"distance\");\n    let sprintDistance = this.extractData(\"sprint_distance\");\n    let sprints = this.extractData(\"sprints\");\n    let sprintAvgID = this.extractData(\"sprint_avg_id\");\n\n    for (let i = 0; i < firstName.length; i++) {\n      const player = {\n        name: String(firstName[i]),\n        lastname: String(lastName[i]),\n        total_time: Number(totalTime[i]),\n        total_distance: Number(distance[i]),\n        sprint_distance: Number(sprintDistance[i]),\n        total_sprint: Number(sprints[i]),\n        sprint_avg: Number(sprintAvgID[i])\n      };\n      console.log(player);\n      tempPlayersList.push(player);\n    }\n\n    console.log(tempPlayersList);\n    this.props.onPlayersAdded(tempPlayersList, this.state.teamName);\n    const team = {\n      name: this.state.teamName,\n      player: tempPlayersList\n    };\n    console.log(team);\n    axios.post(\"http://localhost:5000/teams/add\", team).then(res => console.log(res.data));\n  }\n\n  render() {\n    // console.log(this.props.name);\n    if (this.props.name === \"Choose File\" || this.props.name === undefined) {\n      var csvFilePath = require(\"../../uploads/training13Sep.csv\");\n    } else {\n      try {\n        var csvFilePath = require(\"../../uploads/\" + this.props.name);\n      } catch (error) {\n        alert(\"Can't load this file only CSV files alowed\", window.location = \"/create\");\n      }\n    }\n\n    Papa.parse(csvFilePath, {\n      header: true,\n      skipEmptyLines: true,\n      download: true,\n      complete: this.updateData\n    });\n    let firstName = this.extractData(\"firstname\");\n    let lastName = this.extractData(\"lastname\");\n    let totalTime = this.extractData(\"totaltime\");\n    let distance = this.extractData(\"distance\");\n    let sprintDistance = this.extractData(\"sprint_distance\");\n    let sprints = this.extractData(\"sprints\");\n    let sprintAvgID = this.extractData(\"sprint_avg_id\");\n    let index = 0; // console.log(lastName);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, \"Match: \", this.props.name), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, \"Player Name\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Total Time\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"Distance (km)\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"Sprint Distance\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \" Total Sprints\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"Sprints Avg(MP/H).\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, firstName.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 24\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, lastName.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 24\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, totalTime.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 24\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, distance.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 24\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, sprintDistance.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 24\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, sprints.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 24\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, sprintAvgID.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index++,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 24\n        }\n      }, item);\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"from\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit To Match\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js"],"names":["React","Component","Papa","axios","FileReader","constructor","props","state","data","matches","teamName","players","updateData","bind","extractData","onSubmit","onChangeTeamName","result","setState","selector","temp","final","map","item","Array","isArray","push","slice","length","console","log","e","target","value","preventDefault","tempPlayersList","firstName","lastName","totalTime","distance","sprintDistance","sprints","sprintAvgID","i","player","name","String","lastname","total_time","Number","total_distance","sprint_distance","total_sprint","sprint_avg","onPlayersAdded","team","post","then","res","render","undefined","csvFilePath","require","error","alert","window","location","parse","header","skipEmptyLines","download","complete","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\n\nclass FileReader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      matches: [],\n      teamName: \"\",\n      players: []\n    };\n\n    this.updateData = this.updateData.bind(this);\n    this.extractData = this.extractData.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeTeamName = this.onChangeTeamName.bind(this);\n    // this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  updateData(result) {\n    const data = result.data;\n    this.setState({ data: data });\n  }\n\n  extractData(selector) {\n    let temp = [];\n    let final = [];\n\n    switch (selector) {\n      case \"firstname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][0]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"lastname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][1]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"totaltime\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][2]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][3]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][4]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprints\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][5]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_avg_id\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][6]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      default:\n        console.log(selector);\n    }\n    return final;\n  }\n  onChangeTeamName(e) {\n    this.setState({ teamName: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    let tempPlayersList = [];\n\n    let firstName = this.extractData(\"firstname\");\n    let lastName = this.extractData(\"lastname\");\n    let totalTime = this.extractData(\"totaltime\");\n    let distance = this.extractData(\"distance\");\n    let sprintDistance = this.extractData(\"sprint_distance\");\n    let sprints = this.extractData(\"sprints\");\n    let sprintAvgID = this.extractData(\"sprint_avg_id\");\n\n    for (let i = 0; i < firstName.length; i++) {\n      const player = {\n        name: String(firstName[i]),\n        lastname: String(lastName[i]),\n        total_time: Number(totalTime[i]),\n        total_distance: Number(distance[i]),\n        sprint_distance: Number(sprintDistance[i]),\n        total_sprint: Number(sprints[i]),\n        sprint_avg: Number(sprintAvgID[i])\n      };\n      console.log(player);\n      tempPlayersList.push(player);\n    }\n    console.log(tempPlayersList);\n    this.props.onPlayersAdded(tempPlayersList, this.state.teamName);\n\n    const team = {\n      name: this.state.teamName,\n      player: tempPlayersList\n    };\n\n    console.log(team);\n\n    axios\n      .post(\"http://localhost:5000/teams/add\", team)\n      .then(res => console.log(res.data));\n  }\n\n  render() {\n    // console.log(this.props.name);\n    if (this.props.name === \"Choose File\" || this.props.name === undefined) {\n      var csvFilePath = require(\"../../uploads/training13Sep.csv\");\n    } else {\n      try {\n        var csvFilePath = require(\"../../uploads/\" + this.props.name);\n      } catch (error) {\n        alert(\n          \"Can't load this file only CSV files alowed\",\n          (window.location = \"/create\")\n        );\n      }\n    }\n    Papa.parse(csvFilePath, {\n      header: true,\n      skipEmptyLines: true,\n      download: true,\n      complete: this.updateData\n    });\n\n    let firstName = this.extractData(\"firstname\");\n    let lastName = this.extractData(\"lastname\");\n    let totalTime = this.extractData(\"totaltime\");\n    let distance = this.extractData(\"distance\");\n    let sprintDistance = this.extractData(\"sprint_distance\");\n    let sprints = this.extractData(\"sprints\");\n    let sprintAvgID = this.extractData(\"sprint_avg_id\");\n\n    let index = 0;\n    // console.log(lastName);\n    return (\n      <div>\n        <h1>Match: {this.props.name}</h1>\n        <table>\n          <thead>\n            <tr>\n              <td>Player Name</td>\n              <td>Last Name</td>\n              <td>Total Time</td>\n              <td>Distance (km)</td>\n              <td>Sprint Distance</td>\n              <td> Total Sprints</td>\n              <td>Sprints Avg(MP/H).</td>\n            </tr>\n          </thead>\n          <tbody>\n            <td>\n              {firstName.map(item => {\n                return <tr key={index++}>{item}</tr>;\n              })}\n            </td>\n            <td>\n              {lastName.map(item => {\n                return <tr key={index++}>{item}</tr>;\n              })}\n            </td>\n            <td>\n              {totalTime.map(item => {\n                return <tr key={index++}>{item}</tr>;\n              })}\n            </td>\n            <td>\n              {distance.map(item => {\n                return <tr key={index++}>{item}</tr>;\n              })}\n            </td>\n            <td>\n              {sprintDistance.map(item => {\n                return <tr key={index++}>{item}</tr>;\n              })}\n            </td>\n            <td>\n              {sprints.map(item => {\n                return <tr key={index++}>{item}</tr>;\n              })}\n            </td>\n            <td>\n              {sprintAvgID.map(item => {\n                return <tr key={index++}>{item}</tr>;\n              })}\n            </td>\n          </tbody>\n        </table>\n        <br />\n        <from onSubmit={this.onSubmit}>\n          <input type=\"submit\" value=\"Submit To Match\" />\n        </from>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}