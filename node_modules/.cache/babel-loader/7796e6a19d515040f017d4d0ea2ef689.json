{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport Papa from 'papaparse';\nimport ShowPlayers from './ShowPlayers';\n\nclass FileReader extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        csvfile: e.target.files[0],\n        isLoad: true\n      });\n    };\n\n    this.importCSV = () => {\n      const {\n        csvfile\n      } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData,\n        header: true\n      });\n    };\n\n    this.state = {\n      csvfile: undefined,\n      data: undefined,\n      isLoad: false,\n      playersInGame: [],\n      redirect: false\n    };\n    this.updateData = this.updateData.bind(this);\n    this.extractData = this.extractData.bind(this);\n  }\n\n  updateData(result) {\n    var data = result.data;\n    this.setState({\n      data: data\n    });\n    console.log(data);\n    let tempPlayersList = [];\n    let firstName = this.extractData(\"firstname\");\n    let lastName = this.extractData(\"lastname\");\n    let totalTime = this.extractData(\"totaltime\");\n    let distance = this.extractData(\"distance\");\n    let sprintDistance = this.extractData(\"sprint_distance\");\n    let sprints = this.extractData(\"sprints\");\n    let sprintAvgID = this.extractData(\"sprint_avg_id\");\n\n    for (let i = 0; i < firstName.length; i++) {\n      const player = {\n        name: String(firstName[i]),\n        lastname: String(lastName[i]),\n        total_time: Number(totalTime[i]),\n        total_distance: Number(distance[i]),\n        sprint_distance: Number(sprintDistance[i]),\n        total_sprint: Number(sprints[i]),\n        sprint_avg: Number(sprintAvgID[i])\n      };\n      console.log(player);\n      tempPlayersList.push(player);\n      console.log(tempPlayersList);\n    }\n\n    this.setState({\n      playersInGame: tempPlayersList\n    });\n    console.log(\"abc------\");\n    console.log(this.state.playersInGame);\n    this.setState({\n      redirect: true\n    });\n  }\n\n  extractData(selector) {\n    let temp = [];\n    let final = [];\n    console.log(this.state.data);\n\n    switch (selector) {\n      case \"firstname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][0]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"lastname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][1]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"totaltime\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][2]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][3]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][4]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprints\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][5]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_avg_id\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][6]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      default:\n        console.log(selector);\n    }\n\n    console.log(final);\n    this.setState({\n      playersInGame: final\n    });\n    return final;\n  }\n\n  render() {\n    const {\n      redirect\n    } = this.state;\n    console.log(this.state.csvfile);\n    if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/ShowPlayers',\n        state: {\n          playerInGame: this.state.playersInGame\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Import CSV File!\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"csv-input\",\n      type: \"file\",\n      ref: input => {\n        this.filesInput = input;\n      },\n      name: \"file\",\n      placeholder: null,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.importCSV,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, \" \", this.state.isLoad ? `Upload Now!` : ` `, \" \"));\n  }\n\n}\n\nexport default FileReader;","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js"],"names":["React","Fragment","useState","Redirect","Papa","ShowPlayers","FileReader","Component","constructor","handleChange","e","setState","csvfile","target","files","isLoad","importCSV","state","parse","complete","updateData","header","undefined","data","playersInGame","redirect","bind","extractData","result","console","log","tempPlayersList","firstName","lastName","totalTime","distance","sprintDistance","sprints","sprintAvgID","i","length","player","name","String","lastname","total_time","Number","total_distance","sprint_distance","total_sprint","sprint_avg","push","selector","temp","final","map","item","Array","isArray","slice","render","pathname","playerInGame","input","filesInput"],"mappings":"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","sourcesContent":["import React , { Fragment, useState } from 'react';\nimport { Redirect } from 'react-router'\nimport Papa from 'papaparse';\nimport ShowPlayers from './ShowPlayers';\n\nclass FileReader extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        csvfile: undefined,\n        data: undefined,\n        isLoad: false,\n        playersInGame: [],\n        redirect: false\n\n      };\n      this.updateData = this.updateData.bind(this);\n      this.extractData = this.extractData.bind(this);\n    }\n\n    handleChange = e => {\n      this.setState({\n        csvfile: e.target.files[0],\n        isLoad: true\n      });\n    };\n  \n    importCSV = () => {\n      const { csvfile } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData,\n        header: true\n      });\n  };\n  \n    updateData(result) {\n      var data = result.data;\n      this.setState({data: data})\n      \n      console.log(data);\n      \n      let tempPlayersList = [];\n  \n      let firstName = this.extractData(\"firstname\");\n      let lastName = this.extractData(\"lastname\");\n      let totalTime = this.extractData(\"totaltime\");\n      let distance = this.extractData(\"distance\");\n      let sprintDistance = this.extractData(\"sprint_distance\");\n      let sprints = this.extractData(\"sprints\");\n      let sprintAvgID = this.extractData(\"sprint_avg_id\");\n  \n      for (let i = 0; i < firstName.length; i++) {\n        const player = {\n          name: String(firstName[i]),\n          lastname: String(lastName[i]),\n          total_time: Number(totalTime[i]),\n          total_distance: Number(distance[i]),\n          sprint_distance: Number(sprintDistance[i]),\n          total_sprint: Number(sprints[i]),\n          sprint_avg: Number(sprintAvgID[i])\n        };\n        console.log(player);\n        tempPlayersList.push(player);\n        console.log(tempPlayersList);\n\n      }\n      this.setState({playersInGame:tempPlayersList});\n      console.log(\"abc------\");\n      console.log(this.state.playersInGame);\n\n      this.setState({ redirect: true });\n\n\n\n      \n    }\n    extractData(selector) {\n      let temp = [];\n      let final = [];\n      console.log(this.state.data);\n      switch (selector) {\n        case \"firstname\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][0]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"lastname\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][1]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"totaltime\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][2]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"distance\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][3]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"sprint_distance\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][4]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"sprints\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][5]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"sprint_avg_id\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][6]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        default:\n          console.log(selector);\n      }\n      console.log(final)\n      this.setState({playersInGame:final});\n\n      return final;\n    }\n\n    render() {\n      const { redirect } = this.state;\n      console.log(this.state.csvfile);\n      if (redirect) \n        return <Redirect to={{\n          pathname: '/ShowPlayers',\n          state: { playerInGame: this.state.playersInGame}\n      }}\n/>\n      return (\n        <div className=\"App\">\n          <h2>Import CSV File!</h2>\n          <input\n            className=\"csv-input\"\n            type=\"file\"\n            ref={input => {\n              this.filesInput = input;\n            }}\n            name=\"file\"\n            placeholder={null}\n            onChange={this.handleChange}\n          />\n          <p />\n          <button onClick={this.importCSV}> {this.state.isLoad ? `Upload Now!` : ` `} </button>\n        </div>\n      );\n\n          }\n        }\n  \n  \n  export default FileReader;\n\n\n  "]},"metadata":{},"sourceType":"module"}