{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/github-finder/src/components/users/Serach.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Serach = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      searchUsers(this.state.text);\n      setState({\n        text: ''\n      });\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: this.onSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Serach users..\",\n    value: text,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"serach\",\n    className: \"btn btn-dark btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), showClear && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Clear\"));\n};\n\nSerach.propTypes = {\n  serachUser: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Serach;","map":{"version":3,"sources":["/Users/benshabi/Desktop/github-finder/src/components/users/Serach.js"],"names":["React","useState","PropTypes","Serach","searchUsers","showClear","clearUsers","setAlert","text","setText","onSubmit","e","preventDefault","state","setState","onChange","target","value","propTypes","serachUser","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AACnE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfD,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAAC,KAAKS,KAAL,CAAWL,IAAZ,CAAX;AACAM,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GARD;;AASA,QAAMO,QAAQ,GAAGJ,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAA7B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAE,KAAKP,QAA/B;AAAyC,IAAA,SAAS,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAEO,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGV,SAAS,iBACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CArCD;;AAsCAH,MAAM,CAACe,SAAP,GAAmB;AACjBC,EAAAA,UAAU,EAAEjB,SAAS,CAACkB,IAAV,CAAeC,UADV;AAEjBf,EAAAA,UAAU,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UAFV;AAGjBhB,EAAAA,SAAS,EAAEH,SAAS,CAACoB,IAAV,CAAeD,UAHT;AAIjBd,EAAAA,QAAQ,EAAEL,SAAS,CAACkB,IAAV,CAAeC;AAJR,CAAnB;AAMA,eAAelB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Serach = ({ searchUsers, showClear, clearUsers, setAlert }) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      searchUsers(this.state.text);\n      setState({ text: '' });\n    }\n  };\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={this.onSubmit} className=\"form\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Serach users..\"\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"serach\"\n          className=\"btn btn-dark btn-block\"\n        />\n      </form>\n      {showClear && (\n        <button className=\"btn btn-light btn-block\" onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\nSerach.propTypes = {\n  serachUser: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\nexport default Serach;\n"]},"metadata":{},"sourceType":"module"}