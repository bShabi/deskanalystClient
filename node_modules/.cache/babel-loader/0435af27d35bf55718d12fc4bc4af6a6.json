{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/Manger/Account/AddAccountPage.js\";\nimport { TextField, Grid, makeStyles, Button } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport ManagerControl from '../ManagerControl';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nconst useStyle = makeStyles(theme => ({\n  root: {\n    '& .MuiGrid-root': {\n      width: '80%',\n      margin: theme.spacing(2)\n    }\n  }\n}));\n\nclass AddAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      passwordConfirm: null,\n      team: '',\n      allTeam: [],\n      permission: null\n    };\n    this.changeValue = this.changeValue.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.registerUserToDB = this.registerUserToDB.bind(this);\n    this.getAllTeams = this.getAllTeams.bind(this);\n    this.isUserExist = this.isUserExist.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllTeams();\n    toast.configure();\n  }\n\n  getAllTeams() {\n    axios.get('http://localhost:5000/teams/').then(result => {\n      const myTeam = [];\n      result.data.forEach(team => {\n        myTeam.push(team.teamName);\n      });\n      this.setState({\n        allTeam: myTeam\n      });\n    });\n  }\n\n  changeValue(name, value) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    var account = this.state;\n    var arrData = [];\n    Object.entries(account).map(([key, value]) => {\n      arrData.push(value);\n    });\n\n    for (let value of Object.values(arrData)) {\n      if (value == null || String(value).length === 0) {\n        toast.error('Please inert a value ');\n        return;\n      }\n    }\n\n    if (this.state.password !== this.state.passwordConfirm) {\n      toast.error('please make sure your password match');\n      return;\n    } // check if email not exist\n\n\n    var isUserExist = console.log(this.isUserExist());\n\n    if (!isUserExist) {\n      this.registerUserToDB();\n    } else {\n      toast.warning('User Exist in DB');\n    } // document.getElementById(\"username\").style.color = \"red\";\n    // console.log(this.state)\n    // this.registerUserToDB()\n\n  }\n\n  isUserExist() {\n    axios.post('http://localhost:5000/users/login', {\n      email: this.state.email,\n      password: this.state.password\n    }).then(response => {\n      if (response !== null) return false;else return true;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  registerUserToDB() {\n    axios.post('http://localhost:5000/users/add', {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      password: Number(this.state.password),\n      teamName: this.state.team,\n      permission: this.state.permission\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const classes = makeStyles(theme => ({\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200\n        }\n      }\n    }));\n    const teams = this.state.allTeam;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ManagerControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"base-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, \" \"), ' ', \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, \" First Name \"), ' ', \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      onChange: e => this.changeValue(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 57\n      }\n    }), ' ', \" \"), ' ', \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, \" Last Name \"), ' ', \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      placeholder: \"Last name\",\n      onChange: e => this.changeValue(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 61\n      }\n    }), ' ', \" \"), ' ', \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, \" Team \"), ' ', \" \", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"team\",\n      name: \"team\",\n      onChange: e => this.changeValue(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }\n    }, \" \", ' ', \"Please select a Team \", ' ', \" \"), ' ', \" \", teams.map((team, index) => /*#__PURE__*/React.createElement(\"option\", {\n      value: team,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 38\n      }\n    }, \" \", team, \" \")), \" \", ' ', \" \"), ' ', \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, \" Email \"), ' ', \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"email\",\n      onChange: e => this.changeValue(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 36\n      }\n    }), ' ', \" \"), ' ', \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, \" Password \"), ' ', \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      onChange: e => this.changeValue(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 39\n      }\n    }), ' ', \" \"), ' ', \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }\n    }, \" Confirm Password \"), ' ', \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"passwordConfirm\",\n      placeholder: \"Confirm password\",\n      onChange: e => this.changeValue(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 47\n      }\n    }), ' ', \" \"), ' ', \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }\n    }, \" Permission \"), ' ', \" \", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"permission\",\n      name: \"permission\",\n      onChange: e => this.changeValue(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Coach\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }\n    }, \" Coach \"), ' ', \" \", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Analyst\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 54\n      }\n    }, \" Analyst \"), ' ', \" \"), ' ', \" \"), ' ', \" \"), ' ', \" \"), ' ', \" \", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 18\n      }\n    }, \"Register \", ' ', \" \"), \" \"), ' ', \" \"), \" \");\n  }\n\n}\n\nexport default AddAccountPage;","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/Manger/Account/AddAccountPage.js"],"names":["TextField","Grid","makeStyles","Button","React","useState","useEffect","ManagerControl","axios","ToastContainer","toast","useStyle","theme","root","width","margin","spacing","AddAccountPage","Component","constructor","props","state","firstName","lastName","email","password","passwordConfirm","team","allTeam","permission","changeValue","bind","handleSubmit","registerUserToDB","getAllTeams","isUserExist","componentDidMount","configure","get","then","result","myTeam","data","forEach","push","teamName","setState","name","value","e","account","arrData","Object","entries","map","key","values","String","length","error","console","log","warning","post","response","Number","render","classes","teams","target","index"],"mappings":"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","sourcesContent":["import {\n  TextField,\n  Grid,\n  makeStyles,\n  Button\n} from '@material-ui/core';\nimport React, {\n  useState,\n  useEffect\n} from 'react';\nimport ManagerControl from '../ManagerControl';\nimport axios from 'axios';\nimport {\n  ToastContainer,\n  toast\n} from 'react-toastify';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    '& .MuiGrid-root': {\n      width: '80%',\n      margin: theme.spacing(2),\n    },\n  },\n}));\n\nclass AddAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      passwordConfirm: null,\n      team: '',\n      allTeam: [],\n      permission: null,\n    };\n    this.changeValue = this.changeValue.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.registerUserToDB = this.registerUserToDB.bind(this);\n    this.getAllTeams = this.getAllTeams.bind(this);\n    this.isUserExist = this.isUserExist.bind(this);\n  }\n  componentDidMount() {\n    this.getAllTeams();\n    toast.configure();\n  }\n  getAllTeams() {\n    axios.get('http://localhost:5000/teams/').then((result) => {\n      const myTeam = [];\n      result.data.forEach((team) => {\n        myTeam.push(team.teamName);\n      });\n      this.setState({\n        allTeam: myTeam,\n      });\n    });\n  }\n  changeValue(name, value) {\n    this.setState({\n      [name]: value,\n    });\n  }\n  handleSubmit(e) {\n    var account = this.state;\n    var arrData = [];\n    Object.entries(account).map(([key, value]) => {\n      arrData.push(value);\n    });\n    for (let value of Object.values(arrData)) {\n      if (value == null || String(value).length === 0) {\n        toast.error('Please inert a value ');\n        return;\n      }\n    }\n    if (this.state.password !== this.state.passwordConfirm) {\n      toast.error('please make sure your password match');\n      return;\n    }\n\n    // check if email not exist\n    var isUserExist = console.log(this.isUserExist());\n    if (!isUserExist) {\n      this.registerUserToDB();\n    } else {\n      toast.warning('User Exist in DB');\n    }\n\n    // document.getElementById(\"username\").style.color = \"red\";\n    // console.log(this.state)\n    // this.registerUserToDB()\n  }\n  isUserExist() {\n    axios\n      .post('http://localhost:5000/users/login', {\n        email: this.state.email,\n        password: this.state.password,\n      })\n      .then(\n        (response) => {\n          if (response !== null) return false;\n          else return true;\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  registerUserToDB() {\n    axios\n      .post('http://localhost:5000/users/add', {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: Number(this.state.password),\n        teamName: this.state.team,\n        permission: this.state.permission,\n      })\n      .then(\n        (response) => {\n          console.log(response);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  render() {\n    const classes = makeStyles((theme) => ({\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200,\n        },\n      },\n    }));\n    const teams = this.state.allTeam;\n    return ( <\n      >\n      <\n      ManagerControl / >\n      <\n      form >\n      <\n      div className = 'base-container' >\n      <\n      div className = 'content' >\n      <\n      div className = 'image' > < /div>{' '} <\n      div className = 'form' >\n      <\n      div className = 'form-group' >\n      <\n      label id = 'username' > First Name < /label>{' '} <\n      input type = 'text'\n      name = 'firstName'\n      placeholder = 'First Name'\n      onChange = {\n        (e) =>\n        this.changeValue(e.target.name, e.target.value)\n      }\n      />{' '} <\n      /div>{' '} <\n      div className = 'form-group' >\n      <\n      label htmlFor = 'username' > Last Name < /label>{' '} <\n      input type = 'text'\n      name = 'lastName'\n      placeholder = 'Last name'\n      onChange = {\n        (e) =>\n        this.changeValue(e.target.name, e.target.value)\n      }\n      />{' '} <\n      /div>{' '} <\n      div className = 'form-group' >\n      <\n      label > Team < /label>{' '} <\n      select id = 'team'\n      name = 'team'\n      onChange = {\n        (e) =>\n        this.changeValue(e.target.name, e.target.value)\n      } >\n      <\n      option disabled selected value > {\n        ' '\n      }\n      Please select a Team {\n        ' '\n      } <\n      /option>{' '} {\n        teams.map((team, index) => ( <\n          option value = {\n            team\n          } > {\n            team\n          } < /option>\n        ))\n      } {\n        ' '\n      } <\n      /select>{' '} <\n      /div> <\n      div className = 'form-group' >\n      <\n      label > Email < /label>{' '} <\n      input type = 'text'\n      name = 'email'\n      placeholder = 'email'\n      onChange = {\n        (e) =>\n        this.changeValue(e.target.name, e.target.value)\n      }\n      />{' '} <\n      /div>{' '} <\n      div className = 'form-group' >\n      <\n      label > Password < /label>{' '} <\n      input type = 'password'\n      name = 'password'\n      placeholder = 'password'\n      onChange = {\n        (e) =>\n        this.changeValue(e.target.name, e.target.value)\n      }\n      />{' '} <\n      /div>{' '} <\n      div className = 'form-group' >\n      <\n      label > Confirm Password < /label>{' '} <\n      input type = 'password'\n      name = 'passwordConfirm'\n      placeholder = 'Confirm password'\n      onChange = {\n        (e) =>\n        this.changeValue(e.target.name, e.target.value)\n      }\n      />{' '} <\n      /div>{' '} <\n      div className = 'form-group' >\n      <\n      label > Permission < /label>{' '} <\n      select id = 'permission'\n      name = 'permission'\n      onChange = {\n        (e) =>\n        this.changeValue(e.target.name, e.target.value)\n      } >\n      <\n      option value = 'Coach' > Coach < /option>{' '} <\n      option value = 'Analyst' > Analyst < /option>{' '} <\n      /select>{' '} <\n      /div>{' '} <\n      /div>{' '} <\n      /div>{' '} <\n      button type = 'button'\n      onClick = {\n        this.handleSubmit\n      }\n      className = 'btn' >\n      Register {\n        ' '\n      } <\n      /button> <\n      /div>{' '} <\n      /form> <\n      />\n    );\n  }\n}\n\nexport default AddAccountPage;"]},"metadata":{},"sourceType":"module"}