{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/deskanalyst/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Serach from './components/users/Serach';\nimport Alert from './components/layout/Alert';\nimport TeamSqoud from './components/Pages/Team-Sqoud';\nimport Match from './components/Pages/Match';\nimport CreateMatch from './components/Pages/Create-Match';\nimport Dashboard from './components/Pages/Dashboard';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); //Search Github users\n\n  const serachUserInGit = async text => {\n    setLoading(true);\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${clientID}&client_secret=${clientSecert}`);\n    setUsers(res.data.items);\n    setLoading(false);\n  }; //clear user from state\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; // Get single Github user\n\n\n  const getUser = async username => {\n    setLoading(true);\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    console.log('try get Data from userGit');\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${clientID}&client_secret=${clientSecert}`);\n    setUser(res.data);\n    setLoading(false);\n  }; // Get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    console.log('try get Data from userGit');\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:as&client_id=${clientID}&client_secret=${clientSecert}`);\n    setRepos(res.data);\n    setLoading(false);\n  }; //Set Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Serach, {\n      serachUser: serachUserInGit,\n      clearUsers: clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: showAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Team-Sqoud\",\n    component: TeamSqoud,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Match\",\n    component: Match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Create-Match\",\n    component: CreateMatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/Dashboard\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n      getUser: getUser //Apply func\n      ,\n      getUserRepos: getUserRepos //Apply func\n      ,\n      repos: repos //Send props\n      ,\n      user: user //Send props\n      ,\n      loading: loading //Send props\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Serach","Alert","TeamSqoud","Match","CreateMatch","Dashboard","axios","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","serachUserInGit","text","clientID","clientSecert","res","get","data","items","clearUsers","getUser","username","console","log","getUserRepos","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Serach from './components/users/Serach';\nimport Alert from './components/layout/Alert';\nimport TeamSqoud from './components/Pages/Team-Sqoud';\nimport Match from './components/Pages/Match';\nimport CreateMatch from './components/Pages/Create-Match';\nimport Dashboard from './components/Pages/Dashboard';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  //Search Github users\n  const serachUserInGit = async text => {\n    setLoading(true);\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${clientID}&client_secret=${clientSecert}`\n    );\n    setUsers(res.data.items);\n    setLoading(false);\n  };\n  //clear user from state\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  };\n\n  // Get single Github user\n  const getUser = async username => {\n    setLoading(true);\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    console.log('try get Data from userGit');\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${clientID}&client_secret=${clientSecert}`\n    );\n    setUser(res.data);\n\n    setLoading(false);\n  };\n\n  // Get users repos\n  const getUserRepos = async username => {\n    setLoading(true);\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    console.log('try get Data from userGit');\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:as&client_id=${clientID}&client_secret=${clientSecert}`\n    );\n    setRepos(res.data);\n    setLoading(false);\n  };\n  //Set Alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container\">\n          <Alert alert={alert} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Fragment>\n                  <Serach\n                    serachUser={serachUserInGit}\n                    clearUsers={clearUsers}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={showAlert}\n                  />\n                  <Users loading={loading} users={users} />\n                </Fragment>\n              )}\n            />\n            <Route exact path=\"/Team-Sqoud\" component={TeamSqoud} />\n            <Route exact path=\"/Match\" component={Match} />\n            <Route exact path=\"/Create-Match\" component={CreateMatch} />\n            <Route exact path=\"/Dashboard\" component={Dashboard} />\n\n            <Route\n              exact\n              path=\"/user/:login\"\n              render={props => (\n                <User\n                  {...props}\n                  getUser={getUser} //Apply func\n                  getUserRepos={getUserRepos} //Apply func\n                  repos={repos} //Send props\n                  user={user} //Send props\n                  loading={loading} //Send props\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}