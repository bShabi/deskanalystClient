{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/github-finder/src/App.js\";\nimport React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Serach from './components/users/Serach';\nimport Alert from './components/layout/Alert';\nimport About from './components/Pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      //object\n      loading: false,\n      alert: null,\n      repos: [] //aray\n\n    };\n\n    this.serachUserInGit = async text => {\n      this.setState({\n        loading: true\n      });\n      var clientID = 'cc14c52960a3ea8b1cb7';\n      var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${clientID}&client_secret=${clientSecert}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      var clientID = 'cc14c52960a3ea8b1cb7';\n      var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n      console.log('try get Data from userGit');\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${clientID}&client_secret=${clientSecert}`);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      var clientID = 'cc14c52960a3ea8b1cb7';\n      var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n      console.log('try get Data from userGit');\n      const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:as&client_id=${clientID}&client_secret=${clientSecert}`);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const {\n      users,\n      user,\n      loading,\n      repos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      alert: this.state.alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Serach, {\n        serachUser: this.serachUserInGit,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/About\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser //Apply func\n        ,\n        getUserRepos: this.getUserRepos //Apply func\n        ,\n        repos: repos //Send props\n        ,\n        user: user //Send props\n        ,\n        loading: loading //Send props\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/benshabi/Desktop/github-finder/src/App.js"],"names":["React","Fragment","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Serach","Alert","About","axios","App","Component","state","users","user","loading","alert","repos","serachUserInGit","text","setState","clientID","clientSecert","res","get","data","items","clearUsers","getUser","username","console","log","getUserRepos","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\n\nimport Serach from './components/users/Serach';\nimport Alert from './components/layout/Alert';\nimport About from './components/Pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    users: [],\n    user: {}, //object\n    loading: false,\n    alert: null,\n    repos: [], //aray\n  };\n\n  //Search Github users\n  serachUserInGit = async text => {\n    this.setState({ loading: true });\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${clientID}&client_secret=${clientSecert}`\n    );\n    this.setState({ users: res.data.items, loading: false });\n  };\n  //clear user from state\n  clearUsers = () => this.setState({ users: [], loading: false });\n\n  // Get single Github user\n  getUser = async username => {\n    this.setState({ loading: true });\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    console.log('try get Data from userGit');\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${clientID}&client_secret=${clientSecert}`\n    );\n    this.setState({ user: res.data, loading: false });\n  };\n\n  // Get users repos\n  getUserRepos = async username => {\n    this.setState({ loading: true });\n    var clientID = 'cc14c52960a3ea8b1cb7';\n    var clientSecert = 'a9677e62446a04526d52012c2ed1d3564746abc1';\n    console.log('try get Data from userGit');\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:as&client_id=${clientID}&client_secret=${clientSecert}`\n    );\n    this.setState({ repos: res.data, loading: false });\n  };\n  //Set Alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n  render() {\n    const { users, user, loading, repos } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props => (\n                  <Fragment>\n                    <Serach\n                      serachUser={this.serachUserInGit}\n                      clearUsers={this.clearUsers}\n                      showClear={users.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Users loading={loading} users={users} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path=\"/About\" component={About} />\n              <Route\n                exact\n                path=\"/user/:login\"\n                render={props => (\n                  <User\n                    {...props}\n                    getUser={this.getUser} //Apply func\n                    getUserRepos={this.getUserRepos} //Apply func\n                    repos={repos} //Send props\n                    user={user} //Send props\n                    loading={loading} //Send props\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}