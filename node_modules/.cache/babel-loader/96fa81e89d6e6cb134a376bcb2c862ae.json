{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js\";\nimport React, { Fragment, useState } from 'react';\nimport Papa from 'papaparse';\nimport ShowPlayers from './ShowPlayers';\n\nclass FileReader extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        csvfile: event.target.files[0],\n        isLoad: true\n      });\n    };\n\n    this.importCSV = () => {\n      const {\n        csvfile\n      } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData\n      });\n    };\n\n    this.state = {\n      csvfile: undefined,\n      data: undefined,\n      isLoad: false\n    };\n    this.updateData = this.updateData.bind(this);\n    this.extractData = this.extractData.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  updateData(result) {\n    var data = result.data;\n    this.setState({\n      data: data\n    });\n    console.log(data);\n  }\n\n  extractData(selector) {\n    let temp = [];\n    let final = [];\n\n    while (this.state.data == null) {}\n\n    debugger;\n\n    switch (selector) {\n      case \"firstname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][0]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"lastname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][1]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"totaltime\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][2]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][3]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][4]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprints\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][5]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_avg_id\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][6]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      default:\n        console.log(selector);\n    }\n\n    return final;\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    {\n      this.importCSV();\n    }\n    ;\n    let tempPlayersList = [];\n    let firstName = this.extractData(\"firstname\");\n    let lastName = this.extractData(\"lastname\");\n    let totalTime = this.extractData(\"totaltime\");\n    let distance = this.extractData(\"distance\");\n    let sprintDistance = this.extractData(\"sprint_distance\");\n    let sprints = this.extractData(\"sprints\");\n    let sprintAvgID = this.extractData(\"sprint_avg_id\");\n\n    for (let i = 0; i < firstName.length; i++) {\n      const player = {\n        name: String(firstName[i]),\n        lastname: String(lastName[i]),\n        total_time: Number(totalTime[i]),\n        total_distance: Number(distance[i]),\n        sprint_distance: Number(sprintDistance[i]),\n        total_sprint: Number(sprints[i]),\n        sprint_avg: Number(sprintAvgID[i])\n      };\n      console.log(player);\n      tempPlayersList.push(player);\n    }\n  }\n\n  render() {\n    console.log(this.state.csvfile);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Import CSV File!\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"csv-input\",\n      type: \"file\",\n      ref: input => {\n        this.filesInput = input;\n      },\n      name: \"file\",\n      placeholder: null,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \" \", this.state.isLoad ? `Upload Now!` : ` `, \" \")));\n  }\n\n}\n\nexport default FileReader;","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js"],"names":["React","Fragment","useState","Papa","ShowPlayers","FileReader","Component","constructor","handleChange","event","setState","csvfile","target","files","isLoad","importCSV","state","parse","complete","updateData","undefined","data","bind","extractData","onSubmit","result","console","log","selector","temp","final","map","item","Array","isArray","push","slice","length","e","preventDefault","tempPlayersList","firstName","lastName","totalTime","distance","sprintDistance","sprints","sprintAvgID","i","player","name","String","lastname","total_time","Number","total_distance","sprint_distance","total_sprint","sprint_avg","render","input","filesInput"],"mappings":"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","sourcesContent":["import React , { Fragment, useState } from 'react';\nimport Papa from 'papaparse';\nimport ShowPlayers from './ShowPlayers';\nclass FileReader extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        csvfile: undefined,\n        data: undefined,\n        isLoad: false\n      };\n      this.updateData = this.updateData.bind(this);\n      this.extractData = this.extractData.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n  \n    handleChange = event => {\n      this.setState({\n        csvfile: event.target.files[0], isLoad: true\n      });\n    };\n  \n    importCSV = () => {\n      const { csvfile } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData\n      });\n  };\n  \n    updateData(result) {\n      var data = result.data;\n      this.setState({data: data})\n\n      console.log(data);\n  \n      \n    }\n    extractData(selector) {\n      let temp = [];\n      let final = [];\n      while(this.state.data==null)\n    {\n\n    }\n      debugger;\n      switch (selector) {\n        case \"firstname\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][0]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"lastname\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][1]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"totaltime\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][2]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"distance\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][3]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"sprint_distance\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][4]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"sprints\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][5]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        case \"sprint_avg_id\":\n          this.state.data.map(item => {\n            if (Array.isArray(item[\"__parsed_extra\"])) {\n              temp.push(item[\"__parsed_extra\"][6]);\n            }\n          });\n          final = temp.slice(5, temp.length - 1);\n          break;\n  \n        default:\n          console.log(selector);\n      }\n      return final;\n    }\n    onSubmit(e) {\n      e.preventDefault();\n      {this.importCSV()};\n  \n      let tempPlayersList = [];\n  \n      let firstName = this.extractData(\"firstname\");\n      let lastName = this.extractData(\"lastname\");\n      let totalTime = this.extractData(\"totaltime\");\n      let distance = this.extractData(\"distance\");\n      let sprintDistance = this.extractData(\"sprint_distance\");\n      let sprints = this.extractData(\"sprints\");\n      let sprintAvgID = this.extractData(\"sprint_avg_id\");\n  \n      for (let i = 0; i < firstName.length; i++) {\n        const player = {\n          name: String(firstName[i]),\n          lastname: String(lastName[i]),\n          total_time: Number(totalTime[i]),\n          total_distance: Number(distance[i]),\n          sprint_distance: Number(sprintDistance[i]),\n          total_sprint: Number(sprints[i]),\n          sprint_avg: Number(sprintAvgID[i])\n        };\n        console.log(player);\n        tempPlayersList.push(player);\n      }\n    }\n\n    render() {\n      console.log(this.state.csvfile);\n      return (\n        <div className=\"App\">\n          <h2>Import CSV File!</h2>\n          <input\n            className=\"csv-input\"\n            type=\"file\"\n            ref={input => {\n              this.filesInput = input;\n            }}\n            name=\"file\"\n            placeholder={null}\n            onChange={this.handleChange}\n          />\n          <p />\n          <form onSubmit={this.onSubmit}>\n          <button> {this.state.isLoad? `Upload Now!` : ` `} </button>\n          </form>\n        </div>\n      );\n    }\n  }\n  \n  export default FileReader;\n\n\n  "]},"metadata":{},"sourceType":"module"}