{"ast":null,"code":"import React from 'react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nclass Notifcation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createNotification = type => {\n      return () => {\n        switch (type) {\n          case 'info':\n            NotificationManager.info('Info message');\n            break;\n\n          case 'success':\n            NotificationManager.success('Success message', 'Title here');\n            break;\n\n          case 'warning':\n            NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n            break;\n\n          case 'error':\n            NotificationManager.error('Error message', 'Click me!', 5000, () => {\n              alert('callback');\n            });\n            break;\n        }\n      };\n    };\n  }\n\n}\n\nexport default Notifcation;","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/client/src/components/layout/Notifcation.js"],"names":["React","NotificationContainer","NotificationManager","Notifcation","Component","createNotification","type","info","success","warning","error","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,qBAAR,EAA+BC,mBAA/B,QAAyD,qBAAzD;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACxCC,kBADwC,GAClBC,IAAD,IAAU;AAC7B,aAAO,MAAM;AACX,gBAAQA,IAAR;AACE,eAAK,MAAL;AACEJ,YAAAA,mBAAmB,CAACK,IAApB,CAAyB,cAAzB;AACA;;AACF,eAAK,SAAL;AACEL,YAAAA,mBAAmB,CAACM,OAApB,CAA4B,iBAA5B,EAA+C,YAA/C;AACA;;AACF,eAAK,SAAL;AACEN,YAAAA,mBAAmB,CAACO,OAApB,CAA4B,iBAA5B,EAA+C,oBAA/C,EAAqE,IAArE;AACA;;AACF,eAAK,OAAL;AACEP,YAAAA,mBAAmB,CAACQ,KAApB,CAA0B,eAA1B,EAA2C,WAA3C,EAAwD,IAAxD,EAA8D,MAAM;AAClEC,cAAAA,KAAK,CAAC,UAAD,CAAL;AACD,aAFD;AAGA;AAdJ;AAgBD,OAjBD;AAkBD,KApBuC;AAAA;;AAAA;;AAsB1C,eAAeR,WAAf","sourcesContent":["import React from 'react';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n \nclass Notifcation extends React.Component {\n  createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  }\n}\nexport default Notifcation;\n"]},"metadata":{},"sourceType":"module"}