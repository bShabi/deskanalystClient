{"ast":null,"code":"import React from 'react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nfunction createNotification(type) {\n  return () => {\n    switch (type) {\n      case 'info':\n        NotificationManager.info('Info message');\n        break;\n\n      case 'success':\n        NotificationManager.success('Success message', 'Title here');\n        break;\n\n      case 'warning':\n        NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n        break;\n\n      case 'error':\n        NotificationManager.error('Error message', 'Click me!', 5000, () => {\n          alert('callback');\n        });\n        break;\n    }\n  };\n}\n\nexport default Notifcation;","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/client/src/components/layout/Notifcation.js"],"names":["React","NotificationContainer","NotificationManager","createNotification","type","info","success","warning","error","alert","Notifcation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,qBAAR,EAA+BC,mBAA/B,QAAyD,qBAAzD;;AAEA,SAASC,kBAAT,CAA6BC,IAA7B,EAAmC;AAC/B,SAAO,MAAM;AACX,YAAQA,IAAR;AACE,WAAK,MAAL;AACEF,QAAAA,mBAAmB,CAACG,IAApB,CAAyB,cAAzB;AACA;;AACF,WAAK,SAAL;AACEH,QAAAA,mBAAmB,CAACI,OAApB,CAA4B,iBAA5B,EAA+C,YAA/C;AACA;;AACF,WAAK,SAAL;AACEJ,QAAAA,mBAAmB,CAACK,OAApB,CAA4B,iBAA5B,EAA+C,oBAA/C,EAAqE,IAArE;AACA;;AACF,WAAK,OAAL;AACEL,QAAAA,mBAAmB,CAACM,KAApB,CAA0B,eAA1B,EAA2C,WAA3C,EAAwD,IAAxD,EAA8D,MAAM;AAClEC,UAAAA,KAAK,CAAC,UAAD,CAAL;AACD,SAFD;AAGA;AAdJ;AAgBD,GAjBD;AAkBD;;AACH,eAAeC,WAAf","sourcesContent":["import React from 'react';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n \nfunction createNotification (type) {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  }\nexport default Notifcation;\n"]},"metadata":{},"sourceType":"module"}