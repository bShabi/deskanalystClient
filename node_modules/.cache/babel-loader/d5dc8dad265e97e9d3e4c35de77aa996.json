{"ast":null,"code":"var _jsxFileName = \"/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js\";\nimport React, { Fragment, useState } from 'react';\nimport Papa from 'papaparse';\n\nfunction showPlayers(props) {\n  function extractData(selector) {\n    let temp = [];\n    let final = [];\n\n    switch (selector) {\n      case \"firstname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][0]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"lastname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][1]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"totaltime\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][2]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][3]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][4]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprints\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][5]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_avg_id\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][6]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      default:\n        console.log(selector);\n    }\n\n    return final;\n  }\n\n  let firstName = this.extractData(\"firstname\");\n  let lastName = this.extractData(\"lastname\");\n  let totalTime = this.extractData(\"totaltime\");\n  let distance = this.extractData(\"distance\");\n  let sprintDistance = this.extractData(\"sprint_distance\");\n  let sprints = this.extractData(\"sprints\");\n  let sprintAvgID = this.extractData(\"sprint_avg_id\");\n  let index = 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Match: \", this.props.name), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Player Name\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Total Time\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Distance (km)\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Sprint Distance\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \" Total Sprints\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Sprints Avg(MP/H).\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, firstName.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, lastName.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 22\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, totalTime.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, distance.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 22\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, sprintDistance.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 22\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, sprints.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 22\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, sprintAvgID.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 22\n      }\n    }, item);\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"from\", {\n    onSubmit: this.onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit To Match\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })));\n}\n\nclass FileReader extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        csvfile: event.target.files[0]\n      });\n    };\n\n    this.importCSV = () => {\n      const {\n        csvfile\n      } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData,\n        header: true\n      });\n    };\n\n    this.state = {\n      csvfile: undefined,\n      data: undefined\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(result) {\n    var data = result.data;\n    this.setState({\n      data: data\n    });\n    console.log(data);\n  }\n\n  render() {\n    console.log(this.state.csvfile);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Import CSV File!\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"csv-input\",\n      type: \"file\",\n      ref: input => {\n        this.filesInput = input;\n      },\n      name: \"file\",\n      placeholder: null,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.importCSV,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, \" Upload now!\"));\n  }\n\n}\n\nexport default FileReader;","map":{"version":3,"sources":["/Users/benshabi/Desktop/deskanalyst/client/src/components/Pages/FileReader.js"],"names":["React","Fragment","useState","Papa","showPlayers","props","extractData","selector","temp","final","state","data","map","item","Array","isArray","push","slice","length","console","log","firstName","lastName","totalTime","distance","sprintDistance","sprints","sprintAvgID","index","name","onSubmit","FileReader","Component","constructor","handleChange","event","setState","csvfile","target","files","importCSV","parse","complete","updateData","header","undefined","bind","result","render","input","filesInput"],"mappings":"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","sourcesContent":["import React , { Fragment, useState } from 'react';\nimport Papa from 'papaparse';\n\nfunction showPlayers(props) {\n  function extractData(selector) {\n    let temp = [];\n    let final = [];\n\n    switch (selector) {\n      case \"firstname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][0]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"lastname\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][1]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"totaltime\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][2]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][3]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_distance\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][4]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprints\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][5]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      case \"sprint_avg_id\":\n        this.state.data.map(item => {\n          if (Array.isArray(item[\"__parsed_extra\"])) {\n            temp.push(item[\"__parsed_extra\"][6]);\n          }\n        });\n        final = temp.slice(5, temp.length - 1);\n        break;\n\n      default:\n        console.log(selector);\n    }\n    return final;\n  }\n  let firstName = this.extractData(\"firstname\");\n  let lastName = this.extractData(\"lastname\");\n  let totalTime = this.extractData(\"totaltime\");\n  let distance = this.extractData(\"distance\");\n  let sprintDistance = this.extractData(\"sprint_distance\");\n  let sprints = this.extractData(\"sprints\");\n  let sprintAvgID = this.extractData(\"sprint_avg_id\");\n\n  let index = 0;\n  return (\n    <div>\n      <h1>Match: {this.props.name}</h1>\n      <table>\n        <thead>\n          <tr>\n            <td>Player Name</td>\n            <td>Last Name</td>\n            <td>Total Time</td>\n            <td>Distance (km)</td>\n            <td>Sprint Distance</td>\n            <td> Total Sprints</td>\n            <td>Sprints Avg(MP/H).</td>\n          </tr>\n        </thead>\n        <tbody>\n          <td>\n            {firstName.map(item => {\n              return <tr key={index++}>{item}</tr>;\n            })}\n          </td>\n          <td>\n            {lastName.map(item => {\n              return <tr key={index++}>{item}</tr>;\n            })}\n          </td>\n          <td>\n            {totalTime.map(item => {\n              return <tr key={index++}>{item}</tr>;\n            })}\n          </td>\n          <td>\n            {distance.map(item => {\n              return <tr key={index++}>{item}</tr>;\n            })}\n          </td>\n          <td>\n            {sprintDistance.map(item => {\n              return <tr key={index++}>{item}</tr>;\n            })}\n          </td>\n          <td>\n            {sprints.map(item => {\n              return <tr key={index++}>{item}</tr>;\n            })}\n          </td>\n          <td>\n            {sprintAvgID.map(item => {\n              return <tr key={index++}>{item}</tr>;\n            })}\n          </td>\n        </tbody>\n      </table>\n      <br />\n      <from onSubmit={this.onSubmit}>\n        <input type=\"submit\" value=\"Submit To Match\" />\n      </from>\n    </div>\n  );\n}\nclass FileReader extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        csvfile: undefined,\n        data: undefined\n      };\n      this.updateData = this.updateData.bind(this);\n    }\n  \n    handleChange = event => {\n      this.setState({\n        csvfile: event.target.files[0]\n      });\n    };\n  \n    importCSV = () => {\n      const { csvfile } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData,\n        header: true\n      });\n    };\n  \n    updateData(result) {\n      var data = result.data;\n      this.setState({data: data})\n      console.log(data);\n    }\n  \n    render() {\n      console.log(this.state.csvfile);\n      return (\n        <div className=\"App\">\n          <h2>Import CSV File!</h2>\n          <input\n            className=\"csv-input\"\n            type=\"file\"\n            ref={input => {\n              this.filesInput = input;\n            }}\n            name=\"file\"\n            placeholder={null}\n            onChange={this.handleChange}\n          />\n          <p />\n          <button onClick={this.importCSV}> Upload now!</button>\n\n        </div>\n      );\n    }\n  }\n  \n  export default FileReader;\n\n\n  "]},"metadata":{},"sourceType":"module"}